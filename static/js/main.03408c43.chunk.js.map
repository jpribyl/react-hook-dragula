{"version":3,"sources":["App.tsx","examples/TwoContainerExample.tsx","examples/StatefulExample.tsx","examples/DynamicContentExample.tsx","Logo.tsx","reportWebVitals.ts","index.tsx","Code.tsx"],"names":["hot","module","className","width","href","height","fill","viewBox","d","initializeDragula","Dragula","DragulaContainer","UnstyledDraggable","Draggable","props","draggableStore","TwoContainerExample","options","moves","container","console","log","children","placeholder","StatefulExample","useState","order","setOrder","String","onDrop","source","map","databaseId","DragulaHandle","useDraggableStore","DraggableContent","comic","comics","setComics","length","num","type","onClick","filter","title","img","target","rel","src","alt","getRandomXkcdComic","a","fetch","json","currentComicId","comicID","Math","floor","random","DynamicContentExample","loading","setLoading","disabled","element","el","internalStore","isMouseOverHandle","Logo","version","xmlns","stroke","strokeWidth","strokeLinejoin","strokeMiterlimit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","Code","language","useEffect","Prism","highlightAll"],"mappings":"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","file":"static/js/main.03408c43.chunk.js","sourcesContent":["import Code from 'Code';\nimport TwoContainerExample from 'examples/TwoContainerExample';\nimport StatefulExample from 'examples/StatefulExample';\nimport DynamicContentExample from 'examples/DynamicContentExample';\nimport Logo from 'Logo';\nimport { hot } from 'react-hot-loader';\nimport 'sass/App.scss';\n\nfunction App() {\n  return (\n    <div className=\"min-w-min min-h-screen bg-night-shadz py-8\">\n      <div className=\"max-w-min mx-auto text-white space-y-10\">\n        <div className=\"bg-tapestry-172 pt-4 shadow rounded\">\n          <div className=\"mx-8 text-6xl whitespace-nowrap font-bold flex items-center justify-center\">\n            <div>react-hook-</div>\n            <Logo width=\"50%\" />\n          </div>\n          <div className=\"whitespace-nowrap bg-tapestry-170 font-bold px-4 p-2 flex items-center justify-between space-x-4\">\n            <div>\n              Drag and drop so simple it hurts - Now featuring React Hooks!\n            </div>\n            <div className=\"mx-auto self-stretch border\" />\n            <a\n              className=\"flex items-center space-x-4 hover:text-aqua-forest\"\n              href=\"https://www.github.com/jpribyl/react-hook-dragula\"\n            >\n              <div>Code available on</div>\n              <svg height=\"50px\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                <title>GitHub icon</title>\n                <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" />\n              </svg>\n            </a>\n          </div>\n        </div>\n\n        <div className=\"bg-tapestry-170 p-4 shadow text-lg rounded space-y-4\">\n          <div className=\"border-b text-xl font-bold\">Initializing Dragula</div>\n          <p>\n            First, we need to initialize dragula. This allows us to include\n            typings for the data we attach to event handlers.\n          </p>\n          <p>\n            For example, maybe we want to make a{' '}\n            <code className=\"text-sm\">POST</code> request{' '}\n            <code className=\"text-sm\">onDrop</code> which includes the{' '}\n            <code className=\"text-sm\">id</code> and{' '}\n            <code className=\"text-sm\">name</code> of your draggable items:\n          </p>\n          <Code className=\"rounded border p-3 mx-auto mb-3 overflow-auto text-sm max-h-96\">\n            {`import initializeDragula from 'react-hook-dragula';\n\ntype DraggableStore = {\n  itemId: number;\n  itemName: string;\n}\n\nexport const {\n  Dragula,\n  DragulaContainer,\n  Draggable,\n} = initializeDragula<DraggableStore>();`}\n          </Code>\n        </div>\n\n        <div className=\"bg-tapestry-170 p-4 shadow text-lg rounded space-y-4\">\n          <div className=\"border-b text-xl font-bold\">\n            Two container example\n          </div>\n          <div>\n            Now that we've done that, we can start to build containers! Great\n            stuff.\n          </div>\n          <TwoContainerExample />\n          <p>Excluding styles, these containers were built like this:</p>\n\n          <Code className=\"rounded border p-3 mx-auto mb-3 overflow-auto text-sm max-h-96\">\n            {`<Dragula>\n  <DragulaContainer>\n    <Draggable>\n      You can move these elements between these two containers\n    </Draggable>\n  </DragulaContainer>\n\n  <DragulaContainer>\n    <Draggable>\n      There's also the possibility of moving elements around in the\n      same container, changing their position\n    </Draggable>\n  </DragulaContainer>\n</Dragula>`}\n          </Code>\n        </div>\n\n        <div className=\"bg-tapestry-170 p-4 shadow text-lg rounded space-y-4\">\n          <div className=\"border-b text-xl font-bold\">Stateful example</div>\n          <div>\n            If we need too, we can pass state from react to dragula and back\n            again.\n          </div>\n          <StatefulExample />\n          <div>\n            As long as we initialize dragula with the correct type for the{' '}\n            <code className=\"text-sm\">draggableStore</code> then it will be\n            typesafe:\n          </div>\n          <Code className=\"rounded border p-3 mx-auto mb-3 overflow-auto text-sm max-h-96\">\n            {`function StatefulExample() {\n  const [order, setOrder] = useState([1, 2, 3, 4, 5]);\n\n  return (\n    <div>\n      <p>\n        Current order: {String(order)}\n      </p>\n\n      <Dragula\n        onDrop={({ source }) =>\n          setOrder(\n            [...source.children].map(\n              ({ draggableStore: { databaseId } }) => databaseId,\n            ),\n          )\n        }\n      >\n        <DragulaContainer>\n          <Draggable draggableStore={{ databaseId: 1 }}>\n            Database id: 1\n          </Draggable>\n          <Draggable draggableStore={{ databaseId: 2 }}>\n            Database id: 2\n          </Draggable>\n          <Draggable draggableStore={{ databaseId: 3 }}>\n            Database id: 3\n          </Draggable>\n          <Draggable draggableStore={{ databaseId: 4 }}>\n            Database id: 4\n          </Draggable>\n          <Draggable draggableStore={{ databaseId: 5 }}>\n            Database id: 5\n          </Draggable>\n        </DragulaContainer>\n      </Dragula>\n    </div>\n  );\n}`}\n          </Code>\n        </div>\n\n        <div className=\"bg-tapestry-170 p-4 shadow text-lg rounded space-y-4\">\n          <div className=\"border-b text-xl font-bold\">\n            Dynamic content example\n          </div>\n          <p>\n            We are able to allow React to hold and update the state even when\n            content changes dynamically.\n          </p>\n          <p>\n            This example looks at using a <code className=\"text-sm\">GET</code>{' '}\n            request to append content which may be dragged (by a handle) or\n            removed\n          </p>\n          <DynamicContentExample />\n          <p>In order to build this example, we need to hold some state:</p>\n          <Code className=\"rounded border p-3 mx-auto mb-3 overflow-auto text-sm max-h-96\">\n            {`type Comic = {\n  num: number;\n  title: string;\n  img: string;\n  alt: string;\n};\n\ntype DraggableStore = {\n  comic: Comic;\n  comics: Comic[];\n  setComics: Dispatch<SetStateAction<Comic[]>>;\n};\n\nfunction DynamicContentExample() {\n  // this will be passed into the draggableStore\n  const [comics, setComics] = useState<Comic[]>([]);\n\n  return (\n    <div>\n      {comics.length > 0 && (\n        <Dragula\n          options={{ moves: ({ el }) => !!el?.internalStore.isMouseOverHandle }}\n          onDrop={({ source }) => {\n\n            // source.children is an HTML object array, so spread it into a JS array\n            setComics(\n              [...source.children].map(\n                ({ draggableStore: { comic } }) => comic, \n              ),\n            );\n          }}\n        >\n          <DragulaContainer className=\"p-4 bg-turkish-rose space-y-4\">\n            {comics.map(comic => (\n              <Draggable\n                // in production, make sure key is unique - it's only quasi-unique here\n                key={comic.num}\n                className=\"rounded p-4 overflow-auto\"\n                draggableStore={{\n                  comic,\n                  comics,\n                  setComics,\n                }}\n              >\n                <DraggableContent />\n              </Draggable>\n            ))}\n          </DragulaContainer>\n        </Dragula>\n      )}\n    </div>\n  );\n}`}\n          </Code>\n          <p>\n            We can use the <code className=\"text-sm\">{'<DragulaHandle/>'}</code>{' '}\n            component when we render the content.{' '}\n            <code className=\"text-sm\">react-hook-dragula</code> uses this to\n            store{' '}\n            <code className=\"text-sm\">internalStore.isMouseOverHandle</code>{' '}\n            which is used above in conjunction with the{' '}\n            <code className=\"text-sm\">moves</code> option\n          </p>\n          <Code className=\"rounded border p-3 mx-auto mb-3 overflow-auto text-sm max-h-96\">\n            {`function DraggableContent() {\n  const { comic, comics, setComics } = useDraggableStore();\n\n  return (\n    <div>\n      // DragulaHandle --> internalStore.isMouseOverHandle --> dragula.moves option\n      {comics.length > 1 && (\n        <DragulaHandle>\n          👉 drag me by my handle 👈\n        </DragulaHandle>\n      )}\n\n      // this allows us to remove an item\n      {comic.num && (\n        <button\n          type=\"button\"\n          onClick={() => {\n            setComics(comics.filter(({ num }) => comic.num !== num));\n          }}\n        >\n          &times;\n        </button>\n      )}\n\n      <div>\n        <div>{comic.title}</div>\n        <a href={comic.img} >\n          <img src={comic.img} alt={comic.alt} />\n        </a>\n      </div>\n    </div>\n  );\n}`}\n          </Code>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default hot(module)(App);\n","import { HTMLProps } from 'react';\nimport initializeDragula from 'react-hook-dragula';\n\nconst {\n  Dragula,\n  DragulaContainer,\n  Draggable: UnstyledDraggable,\n} = initializeDragula<Record<string, never>>();\n\nfunction Draggable({ className = '', ...props }: HTMLProps<HTMLDivElement>) {\n  return (\n    <UnstyledDraggable\n      draggableStore={{}}\n      className={`rounded p-4 cursor-move overflow-auto ${className}`}\n      {...props}\n    />\n  );\n}\n\nexport default function TwoContainerExample() {\n  return (\n    <Dragula\n      className=\"grid grid-cols-2 space-x-4\"\n      options={{\n        moves: ({ container }) => {\n          console.log(container?.children);\n          return true;\n        },\n      }}\n    >\n      <DragulaContainer className=\"p-4 bg-cannon-pink space-y-4 rounded\">\n        <Draggable className=\"bg-cosmic\">\n          You can move these elements between these two containers\n        </Draggable>\n        <Draggable className=\"bg-cosmic\">\n          Moving them anywhere else isn't quite possible\n        </Draggable>\n        <Draggable className=\"bg-cosmic\">\n          Anyting can be moved around. That includes images, links, or any other\n          nested elements.\n        </Draggable>\n      </DragulaContainer>\n\n      <DragulaContainer className=\"p-4 bg-turkish-rose space-y-4\">\n        <Draggable className=\"bg-strikemaster\">\n          There's also the possibility of moving elements around in the same\n          container, changing their position\n        </Draggable>\n        <Draggable className=\"bg-strikemaster\">\n          This is the default use case. You only need to specify the containers\n          you want to use\n        </Draggable>\n        <Draggable className=\"bg-strikemaster\">\n          More interactive use cases lie ahead\n        </Draggable>\n        <Draggable className=\"bg-strikemaster\">\n          Moving <code>&lt;input/&gt;</code> elements works just fine. You can\n          still focus them, too.{' '}\n          <input\n            placeholder=\"See?\"\n            className=\"text-black rounded p-1 mt-4 block w-full\"\n          />\n        </Draggable>\n        <Draggable className=\"bg-strikemaster\">\n          Make sure to check out the{' '}\n          <a href=\"https://github.com/bevacqua/dragula#readme\">\n            documentation on GitHub!\n          </a>\n        </Draggable>\n      </DragulaContainer>\n    </Dragula>\n  );\n}\n","import { ComponentProps, useState } from 'react';\nimport initializeDragula from 'react-hook-dragula';\n\ntype DraggableStore = { databaseId: number };\nconst {\n  Dragula,\n  DragulaContainer,\n  Draggable: UnstyledDraggable,\n} = initializeDragula<DraggableStore>();\n\nfunction Draggable({\n  className = '',\n  ...props\n}: ComponentProps<typeof UnstyledDraggable>) {\n  return (\n    <UnstyledDraggable\n      className=\"rounded p-4 cursor-move overflow-auto bg-strikemaster\"\n      {...props}\n    />\n  );\n}\n\nexport default function StatefulExample() {\n  const [order, setOrder] = useState([1, 2, 3, 4, 5]);\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"font-bold\">Current order: {String(order)}</div>\n      <Dragula\n        onDrop={({ source }) =>\n          setOrder(\n            [...source.children].map(\n              ({ draggableStore: { databaseId } }) => databaseId,\n            ),\n          )\n        }\n      >\n        <DragulaContainer className=\"p-4 bg-turkish-rose space-y-4\">\n          <Draggable draggableStore={{ databaseId: 1 }}>\n            Database id: 1\n          </Draggable>\n          <Draggable draggableStore={{ databaseId: 2 }}>\n            Database id: 2\n          </Draggable>\n          <Draggable draggableStore={{ databaseId: 3 }}>\n            Database id: 3\n          </Draggable>\n          <Draggable draggableStore={{ databaseId: 4 }}>\n            Database id: 4\n          </Draggable>\n          <Draggable draggableStore={{ databaseId: 5 }}>\n            Database id: 5\n          </Draggable>\n        </DragulaContainer>\n      </Dragula>\n    </div>\n  );\n}\n","import { Dispatch, SetStateAction, useState } from 'react';\nimport initializeDragula from 'react-hook-dragula';\n\ntype Comic = {\n  num: number;\n  title: string;\n  img: string;\n  alt: string;\n};\n\ntype DraggableStore = {\n  comic: Comic;\n  comics: Comic[];\n  setComics: Dispatch<SetStateAction<Comic[]>>;\n};\n\nconst {\n  Dragula,\n  DragulaContainer,\n  Draggable,\n  DragulaHandle,\n  useDraggableStore,\n} = initializeDragula<DraggableStore>();\n\nfunction DraggableContent() {\n  const { comic, comics, setComics } = useDraggableStore();\n\n  return (\n    <div className=\"grid auto-cols-auto grid-flow-col items-center space-x-4 relative\">\n      {comics.length > 1 && (\n        <DragulaHandle className=\"cursor-move rounded p-2 bg-green-400 w-max\">\n          👉 drag me by my handle 👈\n        </DragulaHandle>\n      )}\n\n      {comic.num && (\n        <button\n          type=\"button\"\n          className=\"absolute top-2 right-3 text-xl font-bold\"\n          onClick={() => {\n            setComics(comics.filter(({ num }) => comic.num !== num));\n          }}\n        >\n          &times;\n        </button>\n      )}\n\n      <div className=\"bg-strikemaster p-4 pr-8 grid auto-cols-auto grid-flow-col place-content-between space-x-4\">\n        <div>{comic.title}</div>\n        <a\n          href={comic.img}\n          className=\"border rounded max-h-24 max-w-full\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <img\n            className=\"max-h-24 max-w-full\"\n            src={comic.img}\n            alt={comic.alt}\n          />\n        </a>\n      </div>\n    </div>\n  );\n}\n\nasync function getRandomXkcdComic() {\n  const currentComicId = (\n    await (await fetch('https://xkcd.vercel.app/?comic=latest')).json()\n  ).num;\n\n  const comicID = Math.floor(Math.random() * currentComicId);\n\n  return await (\n    await fetch(`https://xkcd.vercel.app/?comic=${comicID}`)\n  ).json();\n}\n\nexport default function DynamicContentExample() {\n  const [loading, setLoading] = useState(false);\n  const [comics, setComics] = useState<Comic[]>([]);\n\n  return (\n    <>\n      <div>\n        Click{' '}\n        <button\n          type=\"button\"\n          className=\"bg-blue-500 disabled:bg-gray-400 hover:bg-blue-400 rounded py-1 px-3 mx-1\"\n          disabled={loading}\n          onClick={async () => {\n            setLoading(true);\n            const element = await getRandomXkcdComic();\n            setComics([...comics, element]);\n            setLoading(false);\n          }}\n        >\n          {loading ? 'loading...' : 'here'}\n        </button>{' '}\n        to add some XKCD comics and then drag them around by their handle!\n      </div>\n\n      {comics.length > 0 ? (\n        <Dragula\n          options={{ moves: ({ el }) => !!el?.internalStore.isMouseOverHandle }}\n          onDrop={({ source }) => {\n            setComics(\n              [...source.children].map(\n                ({ draggableStore: { comic } }) => comic,\n              ),\n            );\n          }}\n        >\n          <DragulaContainer className=\"p-4 bg-turkish-rose space-y-4\">\n            {comics.map(comic => (\n              <Draggable\n                // in production, make sure key is unique - it's only quasi-unique here\n                key={comic.num}\n                className=\"rounded p-4 overflow-auto\"\n                draggableStore={{\n                  comic,\n                  comics,\n                  setComics,\n                }}\n              >\n                <DraggableContent />\n              </Draggable>\n            ))}\n          </DragulaContainer>\n        </Dragula>\n      ) : (\n        <div className=\"p-4 bg-turkish-rose\">\n          <div className=\"bg-strikemaster p-4 pr-8\">\n            Click the button above to fill this with comics!\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","import { SVGProps } from 'react';\n\nexport default function Logo(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      version=\"1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"515.771\"\n      height=\"213.557\"\n      viewBox=\"0 0 515.771 213.557\"\n      {...props}\n    >\n      <path\n        fill=\"#961914\"\n        stroke=\"#52100F\"\n        strokeWidth=\"4\"\n        strokeLinejoin=\"round\"\n        strokeMiterlimit=\"10\"\n        d=\"M45.09 158.663c-2.652 40.673-7.848 34.5-7.797 43.87.05 9.37 8.36 9.02 8.36 9.02s8.315.26 8.265-9.11c-.064-11.833-5.916-5.496-8.827-43.78z\"\n      />\n      <path\n        fill=\"#221C3B\"\n        d=\"M161.298 129.555c-.584-.182-32.122-10.11-68.73-26.774l28.113-10.01c.815-.29 1.35-1.07 1.33-1.934-.02-.864-.596-1.617-1.423-1.865-.852-.255-85.436-26.222-107.022-77.88-.366-.877-1.3-1.374-2.23-1.19-.934.183-1.608.997-1.615 1.948-.15 21.842 9.604 43.05 28.337 61.876C25.045 65.42 13.063 56.408 3.41 46.828c-.66-.655-1.68-.77-2.466-.278-.787.49-1.134 1.456-.84 2.335 15.855 47.184 75.654 67.73 78.192 68.582.083.028.168.05.254.067l81.773 15.895c.128.024.256.036.383.036.9 0 1.71-.61 1.938-1.512.258-1.03-.332-2.083-1.346-2.4z\"\n      />\n      <path\n        fill=\"#952A58\"\n        d=\"M20.208 33.882C41.114 63.294 88.69 88.366 88.69 88.366l-5.67 11.54S28.464 66.843 20.207 33.883z\"\n      />\n      <path\n        fill=\"#221C3B\"\n        d=\"M176.817 96.7C169.673 82.777 156 73.51 136.173 69.153 81.2 57.076 66.583 46.878 38.43.955c-.473-.77-1.4-1.128-2.268-.874-.866.254-1.456 1.057-1.438 1.96.192 9.995 4.417 22.933 9.31 37.913 11.585 35.473 26.002 79.622-.626 117.455-.03.04-.057.083-.083.127-.157.258-.25.543-.28.832v.008c-.008.095-.01.19-.007.283v.008c.018.38.145.757.378 1.08.71.985 1.82 2.365 3.222 4.11 6.98 8.69 23.325 29.04 20.575 41.56-.212.967.316 1.944 1.242 2.297.233.09.474.13.71.13.707 0 1.383-.374 1.746-1.02 8.72-15.55 27.214-18.688 46.793-22.01 25.645-4.35 54.71-9.282 62.648-45.41 3.605-16.406 2.383-31.173-3.533-42.703zM80.36 118.05c9.852 2.812 31.804 9.922 32.124 24.504-15.71 4.128-28.223 7.467-41.418 19.84-3.02-1.093-11.167-3.906-18.468-5.194 14.872-8.625 23.905-24.973 27.76-39.15z\"\n      />\n      <path\n        fill=\"#952A58\"\n        d=\"M47.667 26.33c21.25 33.75 42.806 41.29 80.186 49.5 36.266 7.97 48.95 32.165 42.857 59.904-11.654 53.044-78.047 28.823-100.376 56.015-9.748-24.576-25.298-33.18-25.298-33.18s18.36 6.14 24.6 13.206c2.698 3.055 3.915 6.678 3.948 7.22 1.417 1-.43-5.054.34-5.968 21.34-25.367 55.016-14.355 60.676-40.12 7.2-32.77-34.33-29.798-59.6-42.625-5.08 31.65-10.715 48.995-29.964 68.287 21.16-21.657 22.518-60.586 14.408-99.74 21.733 28.916 53.058 34.035 69.974 37.75-37.017-11.142-66.5-29.685-81.75-70.25z\"\n      />\n      <g fill=\"#221C3B\">\n        <path d=\"M225.64 111.34c-4.635 0-8.56 1.99-11.666 5.916-1.21 1.53-2.352 3.367-3.415 5.5v-9.414c0-.548-.226-1.072-.623-1.45-.396-.376-.92-.572-1.48-.547l-18.1.913c-1.064.054-1.9.932-1.9 1.998v3.813c0 1.103.897 2 2 2h4.405c1.36 0 2.338.34 2.986 1.044.674.733 1.03 2.113 1.03 3.99v32.066c0 .145 0 .413-.51.807-.342.263-1.07.577-2.593.577h-4.995c-1.104 0-2 .896-2 2v4.028c0 1.104.896 2 2 2h31.26c1.104 0 2-.896 2-2v-4.028c0-1.104-.896-2-2-2h-6.392c-2.272 0-3.027-.434-3.204-.566-.254-.19-.49-.467-.49-1.193V146c0-3.672 1.05-8.72 3.12-15 1.284-3.847 3.11-6.893 5.422-9.045.52-.48 1.023-.883 1.497-1.2-.334.944-.503 1.932-.503 2.954 0 2.333.674 4.252 2.003 5.7 1.355 1.48 3.21 2.26 5.368 2.26 2.214 0 4.155-.887 5.616-2.564 1.415-1.622 2.132-3.834 2.132-6.578 0-3.322-1.014-6.042-3.014-8.085-2.01-2.06-4.686-3.102-7.954-3.102zM295.888 160.976l-1.934-3.008c-.3-.467-.78-.788-1.325-.887-.546-.096-1.107.033-1.553.364-1.18.878-2.26 1.323-3.21 1.323-.42 0-.88-.106-1.414-.906-.378-.55-.83-1.73-.83-4.236v-27.5c0-4.33-1.832-8.045-5.46-11.055-3.503-2.867-8.537-4.32-14.962-4.32-6.885 0-12.568 1.613-16.894 4.793-4.516 3.32-6.805 7.133-6.805 11.333 0 2.434.8 4.48 2.376 6.076 1.583 1.608 3.57 2.423 5.91 2.423 2.215 0 4.06-.708 5.483-2.104 1.43-1.406 2.154-3.214 2.154-5.373 0-1.556-.634-3.187-1.958-5.014-.537-.716-.76-1.13-.847-1.328.113-.168.45-.557 1.366-1.107 1.94-1.108 4.316-1.67 7.064-1.67 2.887 0 5.177.784 7 2.398 1.75 1.55 2.602 3.345 2.602 5.485v5.855c-9.62 1.237-17.52 3.567-23.5 6.933-6.788 3.82-10.23 8.788-10.23 14.768 0 4.082 1.6 7.475 4.754 10.082 3.042 2.514 7.428 3.788 13.037 3.788 3.894 0 7.304-.668 10.136-1.985 2.265-1.054 4.722-2.856 7.46-5.478 1.114 2.243 2.368 3.905 3.798 5.042 2.02 1.606 4.508 2.422 7.395 2.422 3.73 0 7.142-1.56 10.134-4.633.65-.668.754-1.695.25-2.477zm-42.812-7.89c0-3.307 1.13-5.773 3.438-7.526 3.19-2.378 8.614-4.193 16.14-5.406v4.877c0 4.336-1.335 7.826-4.082 10.67-2.73 2.823-5.854 4.196-9.547 4.196-1.805 0-3.208-.56-4.292-1.708-1.115-1.184-1.657-2.852-1.657-5.1z\" />\n        <path d=\"M343.552 109.676c-3.247 0-6.576 1.604-10.142 4.894-1.917-1.144-3.902-2.035-5.92-2.657-2.51-.77-5.147-1.163-7.84-1.163-6.587 0-12.05 1.825-16.235 5.425-4.275 3.676-6.443 8.307-6.443 13.763 0 3.458.885 6.58 2.63 9.276 1.092 1.69 2.523 3.226 4.28 4.593-2.086 1.022-3.67 2.18-4.795 3.5-1.76 2.064-2.652 4.515-2.652 7.285 0 3.04 1.118 5.62 3.323 7.667.826.77 1.81 1.462 2.946 2.077-1.828.75-3.294 1.647-4.427 2.704-2.292 2.14-3.454 4.584-3.454 7.264 0 3.404 1.75 6.453 5.194 9.06 4.063 3.085 10.234 4.65 18.344 4.65 9.77 0 17.28-2.267 22.317-6.725 3.805-3.32 5.733-7.48 5.733-12.357 0-4.544-1.757-8.18-5.224-10.807-3.343-2.53-8.47-3.762-15.72-3.762h-.003l-13.227.27c-3.616 0-4.814-.55-5.163-.785-.56-.38-.786-.833-.786-1.567 0-1.05.34-1.724 1.11-2.23.465-.295 2.1-.98 7.202-.98h5.853c3.5 0 7.18-1 10.943-2.967 3.792-1.983 6.57-4.343 8.257-7.016 1.702-2.694 2.565-5.827 2.565-9.312 0-2.017-.33-3.94-.982-5.712-.505-1.372-1.306-2.877-2.435-4.568.363-.288.656-.453.88-.546l.012.042c1.294 4.534 4.352 5.21 6.06 5.21 1.627 0 3.11-.678 4.294-1.964 1.15-1.255 1.733-2.82 1.733-4.655 0-2.2-.802-4.093-2.382-5.625-1.56-1.516-3.526-2.284-5.846-2.284zm-33.848 59.375c2.468-1.603 6.845-2.415 13.01-2.415 3.858 0 6.783.304 8.692.9 1.7.534 2.92 1.276 3.626 2.204.7.92 1.042 1.87 1.042 2.897 0 1.777-1.268 3.51-3.77 5.148-2.77 1.814-7.08 2.734-12.814 2.734-4.73 0-8.368-.828-10.82-2.463-1.55-1.023-2.272-2.32-2.272-4.078 0-1.872 1.08-3.484 3.306-4.93zm3.48-30.27c-1.76-2.107-2.65-5.208-2.65-9.218 0-3.703.878-6.573 2.612-8.53 1.693-1.914 3.786-2.844 6.397-2.844 2.6 0 4.694.967 6.406 2.957 1.763 2.05 2.657 4.954 2.657 8.632 0 4.002-.878 7.063-2.61 9.096-1.676 1.967-3.77 2.923-6.4 2.923-2.624 0-4.722-.987-6.414-3.016zM417.52 158.553h-3.168c-1.414 0-2.44-.32-3.134-.98-.666-.632-.99-1.59-.99-2.928V113.34c0-.547-.225-1.072-.622-1.45-.397-.377-.916-.566-1.48-.546l-17.67.913c-1.064.055-1.897.933-1.897 1.998v3.76c0 1.08.857 1.966 1.937 2 4.17.126 5.556.86 5.96 1.172.74.568 1.07 1.313 1.07 2.414v18.854c0 4.413-1.216 7.964-3.72 10.857-2.428 2.806-5.272 4.17-8.697 4.17-2.694 0-4.818-.88-6.49-2.688-1.693-1.828-2.55-4.55-2.55-8.095v-33.354c0-.548-.226-1.072-.623-1.45-.397-.378-.93-.567-1.48-.548l-17.832.913c-1.063.055-1.897.933-1.897 1.998v3.76c0 1.088.87 1.976 1.957 2 4.096.09 5.276.67 5.558.858.97.63 1.4 1.473 1.4 2.73v21.86c0 7.726 1.775 13.36 5.26 16.728 3.447 3.413 7.765 5.144 12.83 5.144 3.458 0 6.902-.997 10.237-2.962 2.186-1.288 4.374-3.01 6.535-5.144l.6 5.516c.11 1.018.97 1.784 1.987 1.784h.046l16.92-.377c1.086-.023 1.954-.912 1.954-2v-3.598c0-1.107-.897-2.002-2-2.002zM452.54 158.553h-5.316c-.83 0-1.492-.208-1.954-.574-.058-.053-.235-.21-.235-.81V84.23c0-.547-.224-1.07-.618-1.447-.396-.377-.908-.58-1.474-.552l-19.927.914c-1.067.05-1.908.93-1.908 1.998v4.028c0 1.104.896 2 2 2h4.512c1.45 0 2.62.403 3.59 1.24.496.424.748 1.23.748 2.4v61.23c0 1.308-.456 1.753-.608 1.9-.516.506-1.523.61-2.28.61h-5.048c-1.104 0-2 .897-2 2v4.03c0 1.103.896 2 2 2h28.52c1.105 0 2-.897 2-2v-4.03c0-1.102-.897-1.997-2-1.997zM515.454 160.976l-1.934-3.008c-.3-.467-.78-.788-1.325-.887-.545-.096-1.106.033-1.552.364-1.18.878-2.26 1.323-3.21 1.323-.42 0-.88-.106-1.414-.906-.38-.55-.83-1.73-.83-4.236v-27.5c0-4.33-1.833-8.045-5.46-11.055-3.504-2.867-8.538-4.32-14.963-4.32-6.886 0-12.57 1.613-16.895 4.793-4.516 3.32-6.805 7.133-6.805 11.333 0 2.434.8 4.48 2.375 6.076 1.583 1.608 3.57 2.423 5.91 2.423 2.215 0 4.06-.708 5.483-2.104 1.43-1.406 2.155-3.214 2.155-5.373 0-1.556-.634-3.187-1.958-5.014-.537-.716-.76-1.13-.847-1.328.114-.168.45-.557 1.367-1.107 1.94-1.108 4.316-1.67 7.064-1.67 2.887 0 5.177.784 7 2.398 1.75 1.55 2.602 3.345 2.602 5.485v5.855c-9.62 1.237-17.52 3.567-23.5 6.933-6.788 3.82-10.23 8.788-10.23 14.768 0 4.082 1.6 7.475 4.754 10.082 3.042 2.514 7.428 3.788 13.037 3.788 3.893 0 7.303-.668 10.135-1.985 2.266-1.054 4.723-2.856 7.46-5.478 1.115 2.243 2.37 3.905 3.8 5.042 2.02 1.606 4.507 2.422 7.394 2.422 3.73 0 7.14-1.56 10.133-4.633.65-.668.754-1.695.25-2.477zm-42.813-7.89c0-3.307 1.13-5.773 3.44-7.526 3.19-2.378 8.613-4.193 16.14-5.406v4.877c0 4.336-1.336 7.826-4.083 10.67-2.73 2.823-5.854 4.196-9.547 4.196-1.805 0-3.208-.56-4.292-1.708-1.115-1.184-1.657-2.852-1.657-5.1z\" />\n      </g>\n    </svg>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport reportWebVitals from 'reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import Prism from 'prismjs';\nimport 'prismjs/components/prism-typescript';\nimport 'prismjs/components/prism-jsx';\nimport 'prismjs/components/prism-tsx';\nimport { useEffect } from 'react';\n\ntype CodeProps = React.HTMLAttributes<HTMLPreElement> & {\n  language?: string;\n  children: string;\n};\n\nconst Code: React.FC<CodeProps> = ({\n  language = 'tsx',\n  children,\n  ...props\n}) => {\n  useEffect(() => {\n    Prism.highlightAll();\n  }, []);\n\n  return (\n    <pre {...props}>\n      <code className={`language-${language}`}>{children}</code>\n    </pre>\n  );\n};\n\nexport default Code;\n"],"sourceRoot":""}